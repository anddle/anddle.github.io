{"meta":{"title":"从设计到实现","subtitle":"手把手教你做android应用开发","description":"my description","author":"安豆","url":"http://book.anddle.com"},"pages":[{"title":"categories","date":"2017-02-01T00:41:38.000Z","updated":"2017-02-01T00:42:02.000Z","comments":false,"path":"categories/index.html","permalink":"http://book.anddle.com/categories/index.html","excerpt":"","text":""},{"title":"从设计到实现","date":"2017-01-29T01:12:26.000Z","updated":"2017-02-04T15:04:46.000Z","comments":false,"path":"index/index.html","permalink":"http://book.anddle.com/index/index.html","excerpt":"","text":"@card{ 展现安卓开发的整个流程用生动的事例，向你展示了一个应用从创意到设计，再到开发，最后直至发布的全部过程。所有的技术要点贯穿于整个产品流程，让学习不再枯燥单调，让你印象深刻。 } @card{ 图文并貌的生动文档用通俗的文字结合生动的图片，讲述着产品开发的所有故事。制作了近千张图片和视频动画，目的只是为了让你能更好理解我想传达给你的每一个细节。 } @card{ 一站式获取开发资源文中所有使用到设计资源和开发图标，我都全部打包呈现。只要你想学并学好，我将为你做好充分的准备，帮助你迈出关键的第一步。 } @card{ 示例代码的参考除了照着文档从头到尾实现你的第一个安卓应用；也可以通过我托管到Github上的源码进行对比学习。掌握一项代码管理的工程技能，对你的帮助将十分巨大。 } @card{ 适合阅读本系列文章的人群 @column-2{ @card{ 大学生大学时光充满了活力、激情与好奇心，不幸的是对技术感兴趣却没有人带路。我保证只要你按照文档中讲到的内容一步一步照着做，一个月的时间定让你脱胎换骨。当其他同学对前路还一片迷茫的时候，你已经来到了充满了新奇与未知的全新领域。 } @card{ 开发者已经有经验的开发者也很适合这系列的文章。它将你的视野从眼前挪开，从设计者的角度看问题。为什么设计师要如此设计？为什么我开发的安卓代码是这个样子？问题的答案都放在本系列文章的各个角落当中。 } } @column-2{ @card{ 设计师界面设计师常常苦恼自己设计出来的作品永远停留在概念阶段：要么自己设计的太超前，不接地气；要么自己没有能力去实现它。我保证，设计师把本系列文章做完之后，一定会重新认识一遍设计的工作，将设计的能力延展到实践当中，更好的与别人合作。 } @card{ 产品经理优秀的产品经理除了要能提出一款出色产品概念，更需要能将它们变成现实的高瞻远瞩。要与聪明的设计师与开发者打交道，最好能理解他们的所思所想，站在他们的角度去看看产品。了解他们的最好办法，就是通过一个简单的案例，把大家的角色都模拟一遍。 } } } @card{ 交流方式 @column-2{ @card{ QQ群：348702074我们开通了这个QQ群，希望大家能够通过它互相讨论，在学习上互相帮助，取得更快的进步；也希望借此能得到大家对本系列文章的反馈，得到各位的呵护，让它茁壮成长。 } @card{ 订阅号：xxx我们开通了订阅号，每当有新文章发布之时，可以第一时间推送给大家。也希望喜欢本系列文章的同学们能够借助网络的力量，让更多的人知道它，利用它，学到各种知识。 } } } @card{ 成书计划等到本系列文章全部完成以后，我计划将它整理成书，提供给更多的希望了解安卓应用开发的读者学习和参考。希望大家能多多给予反馈，让它出生的时候尽可能的全面而完善。 @timeline{ 2017@item{ 6月计划整理文档成书。 } @item{ 5月计划发布软件发布相关的文章内容。 } @item{ 4月计划发布软件测试相关的文章内容。 } @item{ 3月计划发布软件开发相关的文章内容。 } @item{ 2月计划发布设计实践相关的文章内容。 } @item{ 1月发布设计理论相关的文章内容。 } } } @card{ 关于打赏如果您觉得本系列文章对您很有帮助，在可能的情况下，非常感谢您的鼓励。在您的资助下，我将进一步完善文档的内容，希望很快以其他方式回报于您！ @column-2{ @card{ 通过微信支持 } @card{ 通过支付宝支持 } } }"},{"title":"资源下载","date":"2017-01-30T01:00:00.000Z","updated":"2017-02-04T15:04:46.000Z","comments":false,"path":"resources/index.html","permalink":"http://book.anddle.com/resources/index.html","excerpt":"","text":"@card{ 资源下载 项目 下载地址 说明 Sketch素材 下载 提供天气预报界面会用到的各种矢量图 Sketch静态产品原型 下载 Sketch开发完成后的静态原型 Origami动态产品原型 下载 Origami开发完成后的动态可交互原型 安卓应用图标素材 下载 使用Android Studio开发时会使用到的各种图标 } @card{ 项目源码天气预报应用，已经托管到了GitHub上。使用GitHub可以学会如何对代码进行管理，能看到整个项目开发逐渐的演变过程。 点击这里。 } @card{ 设计工具 工具名称 下载地址 说明 Sketch 官方地址 云盘下载 只支持MacOS，付费软件，这里提供的是试用版 Origami 官方下载 云盘下载 只支持MacOS Sketch官方地址：这里Origami官方地址：这里 } @card{ Android StudioAndroid应用开发的官方集成开发环境。 版本号 Windows Mac Linux 2.2.2 官方下载 云盘下载 官方下载 云盘下载 官方下载 云盘下载 2.1.3 官方下载 云盘下载 官方下载 云盘下载 官方下载 云盘下载 1.5.1 官方下载 云盘下载 官方下载 云盘下载 官方下载 云盘下载 *Window下载包集成了Android Studio和Android SDK 官方地址：这里 } @card{ Oracle JDKAndroid Studio与Android SDK依赖的JAVA开发环境。 版本号 Windows 64bit Windows 32bit Mac Linux 64bit Linux 32bit JDK8 官方下载 云盘下载 官方下载 云盘下载 官方下载 云盘下载 官方下载 云盘下载 官方下载 云盘下载 官方地址：这里 }"},{"title":"tags","date":"2017-02-01T00:41:23.000Z","updated":"2017-02-01T00:42:12.000Z","comments":false,"path":"tags/index.html","permalink":"http://book.anddle.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"2 功能","slug":"1_创意/2_功能","date":"2017-01-03T01:00:00.000Z","updated":"2017-02-04T15:04:46.000Z","comments":false,"path":"1_创意/2_功能/","link":"","permalink":"http://book.anddle.com/1_创意/2_功能/","excerpt":"","text":"功能的确定产品的功能并不是在确定了产品之后才开始考虑的，功能与创意选择其实是一个“你中有我，我中有你”的关系。为了体现产品设计的阶段性，我才将它单独提出来分析。 这里讨论的产品功能，是建立在选定了某个基础之上的。比如我们之前选定了天气预报，那么就将产品功能围绕天气预报讨论。 头脑风暴一开始，我们可以对产品进行一次头脑风暴，找出它的核心功能和可以拓展的外延。 什么是头脑风暴？ 简单来说，就是给定一个主题，让一群身份不同的人漫无边际的想一些点子。之后将这些点子归类整理，进一步讨论它们的可行性和重要性，最后形成一个提案。 在我们这里，可以简单的理解成：为了挖掘产品的潜在的功能，我们先不管能不能实现，不管实现了有多大的意义，不管要付出多大的代价，是把我们能想到的功能都找出来。 进行头脑风暴的人最好由不同行业、不同背景的人组成，这样考虑的问题就能多角度，更全面。不过即使只有你一个人也行，毕竟你要做一个能让自己满意的产品才会感觉到快乐，对吧。 方法1可以将我们风暴的内容，写到小纸条上，贴在黑板上， 风暴结束后，将这些小纸条按照内容进行分类整理出来， 最后按照功能的重要性、相关性，形成我们的功能列表， 方法2在电脑上用思导图软件，将风暴的内容写在上面，例如使用Mac平台上的MindNode， 然后通过拖动的方式将它们进行整理， 最后再形成功能列表。 除了头脑风暴，我还可以去软件市场下载同类型的产品，逐个研究它们具有哪些功能，对那些确实优秀的功能点加以优化，做出修改，进行微创新。 举例我们先来风暴一下天气预报要有些什么样的功能： 能够连接网络，从网络获取数据，用来显示； 能够将获取的数据，例如当日的温度、湿度、风向、是否晴天下雨、紫外线指数、穿衣指数、污染指数等等，显示出来； 可以显示当日之后多天的预报，采用曲线图的方式呈现； 可以显示当日之前任何日期的实际天气情况； 能够设定当前的位置，获取天气情况； 能够配合当前的天气，显示一张合适的背景，比如下雨的时候，背景就是一张雨景的照片； 能够配合当前的天气，显示动态的背景，比如下雨的时候，背景就是雨水滑落的动态效果； 能够接收提醒，比如下雨了，发出一个通知提醒用户带雨伞； 能够提供一个桌面小工具，在桌面就能查看到天气信息； 天气数据到的源可以选择，阿里提供的、雅虎提供的、腾讯提供的、百度提供的，都可以切换； 虽然我们还可以风暴出很多天气预报可以具有的功能，但是作为第一个例子，我们暂时就列出这么多吧。 接下来将功能分类，有的分类项也许有重叠，但是没有关系， 外观类： 配合天气显示的背景：动态图或者静态图； 显示温度、湿度、风向、天气、紫外线指数、穿衣指数、污染指数； 未来天气的预报，采用变化的曲线表示； 桌面小工具； 功能点： 通过网络获取天气数据； 多个天气数据源的选择； 多个地点的位置设定； 桌面小工具 提醒功能； 多天预报； 历史天气查询； 选定功能列出一堆的功能后，我们就要考虑给他们排列个重要程度了，确定哪些功能是必须的，哪些是可选的，他们实现起来复杂度有多大。 对于复杂度很高的功能，我们可能还要进行一次头脑风暴，理清楚它的重要性，看能不能把它分解成相对简单的功能来加入。如果不能，那么可能就得暂时放弃了。 有的功能可能还要依据现有的素材，看能不能提供，例如紫外线指数，如果网络端都没有这样的参数，那写在功能列表里面也是没有用的。由此我们也可以看出，头脑风暴之后，多种成员参与的重要性，如果有一位开发者，他可以很快的判断这个功能点从技术上讲实现起来是否可行。 技术验证坦白的讲，技术验证并不是在功能确定之后才开始进行的。它应该在确定功能的时候给予技术上的配合，告诉方案的提出者：“这样的功能从技术上讲是可以（不可以）办到的”。 能越早回答这样的问题，就能越早发现并减少项目的风险。 在天气预报当中，最需要验证的并不是设计出一个界面设计出来后能不能做出来，而是去哪里获取天气数据。 天气数据才是功能的核心。从哪里获取数据呢？ 我们没有自己的观测站，所以数据肯定是要从其他公开的渠道获取：通过网络蜘蛛爬取；通过第三方提供的标准API接口获取，例如阿里提供、雅虎提供、腾讯提供或者百度提供。 假如我能获取到第三方的数据，那么我是否需要自己建设一个提供天气信息的服务器呢？ 就我个人来讲，我希望使用自己的服务器提供天气数据，把收集到的数据都整理到自己的服务器上，一旦某一处的数据出现问题，还可以自动切换到别处的，拥有更好的健壮性。 此外，我也可以自己定义天气数据的查询方式和回传内容，可操控性更好，不会担心数据源的格式发生改变，造成应用获取数据出错的问题。 因此我决定搭建一个服务器，为大家提供这样的数据获取方式，就不麻烦大家将精力分散到与安卓入门开发关系不大的领域去了。 不过，我这里提供的数据都是构造出来的，并不能真实的天气数据，目的只是为了帮助大家学习开发一款应用。毕竟去抓取网络数据有要花费额外的心思，偏离了我的本意。 至此，我们不需要为数据展现的内容而担心了，只要能想到的数据，我都可以在服务器端通过构造产生。之后的界面设计，就需要根据这些能获取到的信息来设计， 数据项 描述 取值 实时温度 当前查询时的天气温度 整数数值 实时风力 当前查询时的风力大小 0-17级 实时风向 当前查询时的风向 东 西 南 北 东南 东北 西南 西北 实时天气 当前查询时的天气状况 晴天、雨天、多云、多云间晴、雾、雪 当日温度范围 当日温度范围 整数数值范围 实时空气质量 当前查询时的空气质量 优 良 轻度污染 重度污染 不利于生存 空气湿度 当前查询时的空气湿度 0-100% 运动指数 当前查询时的运动指数 非常适合 适合 不适合 紫外线指数 当前查询时的紫外线强度 强 中 弱 未来5天预报 未来5天天气状况、最高最低温度 功能筛选下面，我们就来分析一下这些功能，并为它们的重要性和难易程度作出评价。评价的原则很简单：我们只是为了展现开发的各个关节，所以尽量把功能做的简单，降低我们第一次的学习门槛 外观类： 项目 分析 难易程度 重要性 静态图背景 放一张静态图片即可 易 中 动态图背景 设置循环的动画效果 难 中 显示温度、湿度、风向等天气指数 具体显示哪些数据依赖于数据源 易 高 天气变化的曲线表示 这需要一个做曲线图的特殊组件 难 中 桌面小工具 安卓系统提供了桌面工具的框架机制 中 中 功能点： 项目 分析 难易程度 重要性 通过网络获取天气数据 这功能必须有，不然就没有显示的内容 易 高 多个天气数据源的选择 访问自己架设的服务器，不需要用户去选择 易 低 多个地点的位置设定 刚开始简化一点，只提供当地的天气预报，由服务器决定 易 低 桌面小工具 安卓系统提供了桌面工具的框架机制 中 中 提醒功能 需要网络端支持主动的推送数据 难 低 多天预报 天气类App的标配 易 高 历史天气查询 意义不大，用户更关心未来的天气 中 低 我们把重要性低的、开发难的功能暂时放一放，于是得到了下面的功能清单： 通过网络获取天气数据； 显示天气预报的位置； 显示当前时刻的：温度、温度变化范围、湿度、风向、风力、天气、紫外线指数、运动指数等信息； 未来5天天气预报，包括天气状况、温度变化范围； 此外，为了近一步简化开发，我们还可以假定：所有的数据都是从网络获取，如果没有网络，那么就不能获取到天气信息。也就是说获取到数据不需要存储到手机上，这一点又降低了开发的难度。 功能流程确定好功能后，就要根据这些功能，为应用设计一套使用的逻辑，比如需要几个界面，每个界面做些什么事情，这些界面都要覆盖到所有的功能点。 天气预报的流程也许就是这样： App启动之后，自动去网络获取信息； 当日天气信息和近日的预报信息需要展示到界面上，但是具体怎么展示就要看设计阶段的设计方案了； 流程的设定和设计阶段有一定的交集。前者只是一个原则上的草图，而后者将会从设计的角度打磨出一款精品。 这时候的草图叫做框线图，就是一个手稿，一个示意图。这张图还要交给设计师，和设计师一起讨论设计的方案，再由设计师重新操刀，进行大刀阔斧的修改，将草图蜕变成真正的产品形态，最后形成高保真图、产品原型和UI素材。 下一版功能对于那些我们没有被选定进来的功能，我们可以将它们放到该App下个版本当中。例如，位置的设定，桌面小工具，天气预报的曲线图等等。 未来版本的天气预报App不仅需要修复之前存在的设计缺陷，也要加入新的功能，让用户获得更好的使用体验。","categories":[{"name":"第1章-创意","slug":"第1章-创意","permalink":"http://book.anddle.com/categories/第1章-创意/"}],"tags":[]},{"title":"1 创意","slug":"1_创意/1_创意","date":"2017-01-02T01:00:00.000Z","updated":"2017-02-04T15:04:46.000Z","comments":false,"path":"1_创意/1_创意/","link":"","permalink":"http://book.anddle.com/1_创意/1_创意/","excerpt":"","text":"创意我们总会羡慕、崇拜那些创造出了伟大产品的人。提到乔布斯，大家一定会竖起大拇指，他创造出了革命性的ipod、macbook、iphone、ipad等等极具创意、使用方便、同时又设计优雅的产品。 对于从事软件行业的人来讲，最有成就感的事情莫过于开发出一款让人交口称赞的应用软件了。 来源好的产品要有好的创意，人对创造产品的创意来自于哪里呢？ 我觉得产品的创意来源于三个方面： 最直接的创意来源于自己的实际需要。比如，曾经有位程序员想写一部小说，他尝试了市面上很多文字编辑器，觉得都不能满足自己的需要，于是就自己开发了一款。最后，他原打算要写的书没有了下文，但是却创造出了Mac系统上非常经典的应用-Ulysses，成为了很多作家的创作利器。Ulysses将写作爱好者的写作体验带入了天堂。 更多的创意来源于对现有生活的归纳总结。用智能手机听音乐，几乎是每个使用者的刚性需求，所以开发一款音乐播放器的灵感就很容易跑进我们的大脑。 还有的创意来源于对现有产品的差异化。例如音乐播放器这样的刚需应用有很多，QQ音乐、阿里音乐，虾米音乐，酷狗音乐，安卓系统自带的音乐播放器等等。不过网易云音乐在众多的音乐播放器中脱引而出，依靠的正是它对其他类似应用差异化的挖掘–基于音乐的社交模式。 标准好的创意是什么？我的理解是： 实实在在的解决了一个问题，至少它能让我们觉得方便了我们的工作或者生活。 它的解决方法很简单，不需要复杂的操作，也许简单的让人意想不到。 产品的外观设计的深入人心，一看到它就有使用的欲望。 记录工具创意宝贵，可能我们一转眼就把它忘记了，所以我们要能随时将它们记录下来， 最传统的方式就是笔和纸，好记性比不过烂笔头，随时带着一个小本子和笔，一旦有了产品的灵感，就把它记录下来。 iPad和apple pencil也是一对极好的搭档，用电子的方式做记录能便于我们做后继的整理。iPad上有很多好用的笔记类App，例如我正在使用的Notablitiy。 手机是我们形影不离的帮手，你可以用手机中的记事本，记录下自己的想法。如果还觉得麻烦，可以通过录音，把它们保留下来。 有了创意，我们下一步就需要将它们整理起来，看看它们实现的可行性。 选择创意怎么来，我是不能帮助大家的，这只能靠大家各自的能力、经验、体验和运气了。我只能帮助大家如何从众多的创意中选择一个适合自己的。 并不是所有的创意都有让你去实现的价值。也许你有一个很好的创意，但是要花费很大的经济成本，那对你个人来说是有很大风险的，你不得不放弃。也许你有另外一个创意，但是也许别人已经在做了，只是你不知道而已，今后撞车的可能性很大。所以我们需要将它们筛选一遍，选择最适合的一个。 怎么选择呢？ 我想选择的标准很多，主要还是看你的目的是什么，你为了实现这个创意，愿意付出多大的代价： 为实现创意投入的资金是多少； 为实现创意投入的精力是多少； 实现创意的目的是为了自己的个人爱好，还是说为了靠它养家糊口； 当我们面对众多诱惑需要进行选择的时候，你可以把要选择的对象横向铺开，像我们网上购物时比较商品一样，列出它们各自具备的优点和缺点，比较它们各自的异同，找出你最偏向的那个。 举个例子这本书将把理论和实践结合在一起，所以我需要一个合适的创意做为我们后面讲解的例子。 首先明确我的目标。这个例子不能太复杂，门槛太高，会吓走很多人；但是也不能过于傻瓜，要涵盖一定的知识点，否则读完以后脑袋中还是空空如也。 计算器、视频播放器、记事本、音乐播放器、天气预报，都是一些经常可能用到的小应用。它们开发起来都不太困难，只是类型不同。 对于没有进行过安卓开发的你来说，也许根本就不知道是否困难，至少要亲自做一次之后才能知道。这里我就自己的经历来说，它们的实现还是很简单的，大家不必惊慌。 然后将这些项目在脑中进行横向对比后，给他们的各个项目点按照难易程度从1到5打分: 项目 计算器 音乐播放器 记事本 视频播放器 天气预报 体现安卓设计 1 3 5 2 4 技术简单 5 3 1 2 4 界面布局简单 5 2 1 3 4 合计得分 11 8 7 7 12 上面所列出的项目和得分都是非常主观的，项目是根据开发者的目标来制定，而得分完全根据开发者个人的偏好和经验。所以要做到评估准确，最好的办法就是多做项目，增加自己的经验值。 通过上面的评比，我决定选择天气预报来做为本书讲解的范例。","categories":[{"name":"第1章-创意","slug":"第1章-创意","permalink":"http://book.anddle.com/categories/第1章-创意/"}],"tags":[]}]}